// 지금까지 내용정리
// Java에서의 디자인 패턴 사용 예제
// http://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns-in-javas-core-libraries

// GoF 디자인 패턴 23가지

// 생성 5가지
//	- 추상 팩토리: 공장을 인터페이스 기반으로 교체 가능하게 하자.
//	- 싱글톤: 하나의 객체를 생성하고, 동일한 방법으로 접근 가능하게 하자.
//	- 팩토리 메소드: 템플릿 메소드와 동일한데 변하는 것이 정책이 아닌 객체 생성일 때
//	- 프로토타입 패턴: 객체의 복제를 다형성 기반으로
//	- 빌더

// 구조 7가지
//	- 어댑터: 클라이언트가 요구하는 클래스를 인터페이스만 변경해서 제공하는 패턴 - stack adapter
//			MVC 모델에서 view의 요구를 controller가 받아서 model 변경, List와 ListView가 있다면 그 사이에 ListAdapter가 중간 역할한다.
//	- 컴포지트: 복합 객체의 구성
//			단일 객체와 복합 객체는 동일 부모를 가져야 한다.
//			사용법이 동일해야 한다.
// 행위 11가지

